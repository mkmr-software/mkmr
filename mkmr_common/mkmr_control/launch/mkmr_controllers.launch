<launch>
    <arg name="robot_id" default="mkmrX"/>
    <arg name="is_sim" default="true"/>

    <rosparam file="$(find mkmr_control)/config/joint_state_controller.yaml" command="load" subst_value="true" ns="$(arg robot_id)"/>
    <!-- <rosparam file="$(find mkmr_control)/config/mecanum_drive_controller.yaml" command="load" subst_value="true" ns="$(arg robot_id)"/> -->
    <rosparam file="$(find mkmr_control)/config/diff_drive_controller.yaml" command="load" subst_value="true" ns="$(arg robot_id)"/>
    <!-- <rosparam file="$(find mkmr_control)/config/gazebo_ros_control.yaml" command="load" subst_value="true" ns="$(arg robot_id)"/> -->

    <node name="mkmr_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" ns="$(arg robot_id)"
        args="joint_state_controller mkmr_controller" />


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="$(arg robot_id)"/>
       
    <group unless = "$(arg is_sim)">
        <node name="hw_interface"   pkg="joint_trajectory_controller" type="rrbot" output="screen" ns="$(arg robot_id)">
            <param name="robot_id" type="string" value="$(arg robot_id)"/>
        </node>
    </group>

    <group ns = "$(arg robot_id)">
        <node pkg="twist_mux" type="twist_mux" name="twist_mux">
            <rosparam command="load" file="$(find mkmr_control)/config/twist_mux.yaml" />
            <remap from="cmd_vel_out" to="mkmr_controller/cmd_vel" />
        </node>

        <node pkg="twist_mux" type="twist_marker" name="twist_marker">
          <remap from="twist"  to="mkmr_controller/cmd_vel"/>
          <remap from="marker" to="twist_marker"/>
        </node>

        <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server">
            <param name="link_name" value="$(arg robot_id)/base_footprint" />
            <param name="robot_name" value="$(arg robot_id)" />
            <remap from="twist_marker_server/cmd_vel" to="marker_vel" />
        </node>

    </group>
    
</launch>
