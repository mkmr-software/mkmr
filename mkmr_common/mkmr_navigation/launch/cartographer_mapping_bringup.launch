<?xml version="1.0"?>

<launch>
    <arg name="robot_id" default="$(env MKMR_ROBOT_ID)"/>
    <arg name="config_dir" default="$(eval find(env ('MKMR_CONFIG_PKG')))"/>
    <arg name="is_sim" default="true"/>
    <arg unless="$(arg is_sim)" name="config_file" default="mapping.lua"/>
    <arg if="$(arg is_sim)" name="config_file" default="mapping_sim.lua"/>

    <group ns="$(arg robot_id)">
        <node name="cartographer_node" pkg="cartographer_ros"
            type="cartographer_node" args="
            -configuration_directory $(find mkmr_cfg_files)/config/cartographer
            -configuration_basename $(arg config_file)"
            output="screen">
            <remap from="odom" to="mkmr_controller/odom" />
        </node>

        <node pkg="cartographer_ros" type="cartographer_occupancy_grid_node"
            name="cartographer_occupancy_grid_node"
            args="-resolution 0.05" >
        </node>

        <node pkg="mkmr_services" type="save_map.py" name="save_map" output="screen">
            <param name="config_dir" value="$(arg config_dir)" />
        </node> 

        <node name="pose" pkg="mkmr_scripts" type="pose" output="screen">
            <param name="configuration_directory" value="$(find mkmr_cfg_files)/config/cartographer" />
            <param name="configuration_basename" value="$(arg config_file)" />

            <param name="initial_pose_x" value="0.0" />
            <param name="initial_pose_y" value="0.0" />
            <param name="initial_yaw" value="0.0" />

            <param name="publish_pose_topic" value="true" />
            <param name="map_frame" value="$(arg robot_id)/map" />
            <param name="base_frame" value="$(arg robot_id)/base_footprint" />
        </node>
    </group>

    <group if="$(arg is_sim)">
        <include file="$(find mkmr_navigation)/launch/move_base.launch">
            <arg name="robot_id" value="$(arg robot_id)"/>
        </include>
    </group>

</launch>
